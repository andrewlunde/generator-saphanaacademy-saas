ID: <%= projectName %>
_schema-version: "3.1"
version: 0.0.1

parameters:
  enable-parallel-deployments: true

modules:
<% if(hana){ -%>
  - name: <%= projectName %>-db
    type: com.sap.xs.hdi-dynamic
    path: db
    build-parameters:
      ignore:
        - default-*.json
        - .env
        - "*node_modules*"
        - package-lock.json
    parameters:
      memory: 256M
      disk-quota: 512M
<% if(customDomain !== ""){ -%>
      host: <%= projectName %>-db
      domain: <%= customDomain %>
<% } -%>
    properties:
      hdi_dynamic_deploy_user: ${generated-user}
      hdi_dynamic_deploy_password: ${generated-password}
    provides:
      - name: db_api
        properties:
          url: ${default-url}
          user: ${generated-user}
          password: ${generated-password}
<% } -%>

  - name: <%= projectName %>-srv
    type: nodejs
    path: srv
    build-parameters:
      ignore:
        - default-*.json
        - .env
        - "*node_modules*"
        - package-lock.json
    parameters:
      memory: 256M
      disk-quota: 512M
<% if(customDomain !== ""){ -%>
      host: <%= projectName %>-srv
      domain: <%= customDomain %>
<% } -%>
    provides:
      - name: srv-api
        properties:
          url: ${default-url}
    requires:
      - name: <%= projectName %>-uaa
      - name: <%= projectName %>-registry
      - name: app-api
        properties:
          APP_PROTOCOL: ~{protocol}
          APP_URI: ~{uri}
<% if(hana){ -%>
      - name: <%= projectName %>-sm
      - name: db_api
        properties:
          db_api_url: ~{url}
          db_api_user: ~{user}
          db_api_password: ~{password}
<% } -%>
<% if((routes && BTPRuntime === 'CF') || apiDest){ -%>
      - name: <%= projectName %>-dest
<% } -%>

  - name: <%= projectName %>
    type: approuter.nodejs
    path: app
    build-parameters:
      ignore:
        - default-*.json
        - .env
        - "*node_modules*"
        - package-lock.json
    parameters:
      memory: 256M
      disk-quota: 512M
<% if(customDomain !== ""){ -%>
      host: <%= projectName %>
      domain: <%= customDomain %>
<% } -%>
      keep-existing-routes: true
    properties:
      TENANT_HOST_PATTERN: '^(.*)-${default-uri}'
    provides:
      - name: app-api
        properties:
          protocol: ${protocol}
          uri: ${default-uri}
    requires:
      - name: <%= projectName %>-uaa
      - name: srv-api
        group: destinations
        properties:
          name: srv
          url: ~{url}
          forwardAuthToken: true

resources:
  - name: <%= projectName %>-uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
<% if(hana){ -%>
  - name: <%= projectName %>-sm
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
<% } -%>
  - name: <%= projectName %>-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: srv-api
    parameters:
      service: saas-registry
      service-plan: application
      service-name: <%= projectName %>-registry
      config:
        xsappname: <%= projectName %>
        appName: <%= projectName %>
        displayName: '<%= displayName %>'
        description: '<%= description %>'
        category: '<%= category %>'
        appUrls:
          onSubscription: ~{srv-api/url}/callback/v1.0/tenants/{tenantId}
<% if(apiDest){ -%>
          getDependencies: ~{srv-api/url}/callback/v1.0/dependencies
<% } -%>
          onSubscriptionAsync: false
          onUnSubscriptionAsync: false
          callbackTimeoutMillis: 300000
<% if((routes && BTPRuntime === 'CF') || apiDest){ -%>
  - name: <%= projectName %>-dest
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        init_data:
          instance:
            existing_destinations_policy: ignore
            destinations:
<% if(routes && BTPRuntime === 'CF'){ -%>
              - Name: <%= projectName %>-cfapi
                Description: CF Cloud Controller API
                URL: ${controller-url}
                Type: HTTP
                ProxyType: Internet
                Authentication: OAuth2Password
                tokenServiceURL: ${authorization-url}/oauth/token
                clientId: cf
                clientSecret:
                User: <SetValueInCockpit>
                Password: <SetValueInCockpit>
<% } -%>
<% if(apiDest){ -%>
              - Name: <%= projectName %>-nw
                Description: Northwind
                URL: https://services.odata.org/Northwind/Northwind.svc
                Type: HTTP
                ProxyType: Internet
                Authentication: NoAuthentication
<% } -%>
<% } -%>